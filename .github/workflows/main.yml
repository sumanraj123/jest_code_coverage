name: Jest code coverage

on:
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: npm install

      - name: Run tests with coverage
        run: npm run coverageReport

      - name: Upload coverage report
        uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: coverage

      - name: Calculate Coverage Percentage
        run: node calculate_coverage.js
        id: coverage_percentage

       # Use the coverage percentage output in other steps
      - name: Display coverage
        run: echo Coverage percentage:${{ steps.coverage_percentage.outputs.coverage_percentage}}%

  
      - name: Set Status Check
        if: ${{  parseFloat('${{ steps.coverage_percentage.outputs.coverage_percentage }}') < 95 }}
        uses: actions/github-script@0.9.0
        with:
          github-token: ${{ secrets.GIT_TOKEN }}
          script: |
            const coverage = parseFloat('${{ steps.coverage_percentage.outputs.coverage_percentage }}');
            const status = coverage >= 80 ? 'success' : 'failure';
            const description = coverage >= 80 ? 'Code coverage is acceptable.' : 'Code coverage is less than 80%. Please improve code coverage before merging.';
            github.repos.createStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: status,
              description: description,
              context: "Code Coverage"
            })

      - name: Finalize Status Check
        if: ${{ steps.coverage_percentage.outputs.coverage_percentage >= 80 }}
        uses: actions/github-script@0.9.0
        with:
          github-token: ${{ secrets.GIT_TOKEN }}
          script: |
            github.repos.createStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: 'success',
              description: 'Code coverage is acceptable.',
              context: "Code Coverage"
            })
